<AML>
 <Item type="Report" id="FB8668A14B7346208AB2E9ADC1E9698B" action="add">
  <label xml:lang="en">Workflow Process History</label>
  <location>client</location>
  <method keyed_name="FRG_Workflow History Report" type="Method">
   <Item type="Method" action="get" select="id">
    <name>FRG_Workflow History Report</name>
   </Item>
  </method>
  <report_query><![CDATA[<Item type="Workflow Process" id="{@id}" initial_action="get" action="do_l10n" select="active_date, closed_date, state, name, description, created_by_id" >
              <created_by_id>
                <Item type="User" select="first_name,last_name" action="get">
                  <Relationships>
                    <Item type="Alias" action="get" select="related_id(name)"/>
                  </Relationships>
                </Item>
              </created_by_id>
              <Relationships>
                <Item type="Workflow Process Activity" action="get" select="related_id">
                  <related_id>
                  <Item type="Activity" action="get" select="name,label,state">
                    <state condition="ne">Pending</state>
                    <Relationships>
                      <Item type="Activity Assignment" action="get" select="closed_by, closed_on, comments, path, related_id, created_on" >
                         <related_id type="Identity" select="keyed_name" />
                      </Item>
                    </Relationships>
                  </Item>
                  </related_id>
                </Item>
              </Relationships>
            </Item>]]></report_query>
  <target>window</target>
  <type>item</type>
  <xsl_stylesheet><![CDATA[<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:user="urn:user-scripts" xmlns:aras="http://www.aras.com" version="1.0">
	<xsl:output method="html" omit-xml-declaration="yes" standalone="yes" indent="yes" cdata-section-elements="script msxsl:script"/>
	<xsl:template name="StringReplace">
		<xsl:param name="input"/>
		<xsl:param name="oldValue"/>
		<xsl:param name="newValue"/>
		<xsl:choose>
			<xsl:when test="contains($input, $oldValue)">
				<xsl:value-of select="substring-before($input,$oldValue)"/>
				<xsl:value-of select="$newValue"/>
				<xsl:call-template name="StringReplace">
					<xsl:with-param name="input" select="substring-after($input,$oldValue)"/>
					<xsl:with-param name="oldValue" select="$oldValue"/>
					<xsl:with-param name="newValue" select="$newValue"/>
				</xsl:call-template>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="$input"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="/">
		<html>
			<head/>
			<style type="text/css" userData="Global">
				.cellSolid {
				border-top:1px #000000 solid;
				border-right:1px #000000 solid;
				border-bottom:1px #000000 solid;
				border-left:1px #000000 solid;
				}
				.cellSolidTopRight {
				border-top:1px #000000 solid;
				border-right:1px #000000 solid;
				}
				.cellSolidTopLeft {
				border-top:1px #000000 solid;
				border-left:1px #000000 solid;
				}
				.cellSolidRightBottom {
				border-right:1px #000000 solid;
				border-bottom:1px #000000 solid;
				}
				.cellSolidBottomLeft {
				border-bottom:1px #000000 solid;
				border-left:1px #000000 solid;
				}
				.cellSolidTop {
				border-top:1px #000000 solid;
				}
				.cellSolidRight {
				border-right:1px #000000 solid;
				}
				.cellSolidBottom {
				border-bottom:1px #000000 solid;
				}
				.cellSolidLeft {
				border-left:1px #000000 solid;
				}
				.cellDashed {
				border-top:1px #666666 dashed;
				border-right:1px #666666 dashed;
				border-bottom:1px #666666 dashed;
				border-left:1px #666666 dashed;
				}
				.cellDashedTopRight {
				border-top:1px #666666 dashed;
				border-right:1px #666666 dashed;
				}
				.cellDashedTopLeft {
				border-top:1px #666666 dashed;
				border-left:1px #666666 dashed;
				}
				.cellDashedBottomRight {
				border-bottom:1px #666666 dashed;
				border-right:1px #666666 dashed;
				}
				.cellDashedBottomLeft {
				border-bottom:1px #666666 dashed;
				border-left:1px #666666 dashed;
				}
				.cellDashedTop {
				border-top:1px #666666 dashed;
				}
				.cellDashedRight {
				border-right:1px #666666 dashed;
				}
				.cellDashedBottom {
				border-bottom:1px #666666 dashed;
				}
				.cellDashedLeft {
				border-left:1px #666666 dashed;
				}
				.cellHeader {
				background-color:#CCCCCC;
				border-top:1px #000000 solid;
				border-right:1px #000000 solid;
				border-bottom:1px #000000 solid;
				padding:2px;
				text-align:center;
				text-transform:capitalize;
				text-align:center;
				font-family:helvetica;
				font-weight:bold;
				font-size:8pt;
				}
				.cellHeaderVertBT {
				background-color:#CCCCCC;
				border-top:1px #000000 solid;
				border-right:1px #000000 solid;
				border-bottom:1px #000000 solid;
				border-left:1px #000000 solid;
				padding:2px;
				writing-mode:tb-rl;filter: flipv fliph;
				text-align:center;
				text-transform:capitalize;
				text-align:center;
				font-family:helvetica;
				font-weight:bold;
				font-size:8pt;
				}
				.cellHeaderVertTB {
				background-color:#CCCCCC;
				border-top:1px #000000 solid;
				border-right:1px #000000 solid;
				border-bottom:1px #000000 solid;
				border-left:1px #000000 solid;
				padding:2px;
				writing-mode:tb-rl;filter: flipv flipv;
				text-align:center;
				text-transform:capitalize;
				text-align:center;
				font-family:helvetica;
				font-weight:bold;
				font-size:8pt;
				}
				.circle {
				width: 10px;
				height: 10px;
				border-radius: 50%;
				display: inline-flex;
				align-items: center;
				justify-content: center;
				border: 1px solid black;
				}
			</style>
			<body topmargin="20" leftmargin="50">
				<table border="0" cellspacing="0" cellpadding="0" width="1600">
					<tr valign="top">
						<td style="font-family:helvetica;font-size:14pt;font-weight:Bold;padding:2px;" uniqueID="ms__id10" class="" align="left" colspan="" rowspan="" height="" width="">
							Workflow History Report
						</td>
					</tr>
					<tr>
						<td style="font-family:helvetica; font-size:8pt; padding:2px;" uniqueID="ms__id28">
							Item:
							<xsl:value-of select="//Result/Item/name"/>
						</td>
						<td style="font-family:helvetica; font-size:8pt; padding:2px;" uniqueID="ms__id30">
							<xsl:value-of select="//Result/Item/description"/>
						</td>
						<td style="font-family:helvetica; font-size:8pt; padding:2px;" uniqueID="ms__id29">
							Current Status is:
							<xsl:value-of select="//Result/Item/state"/>
						</td>
					</tr>
					<tr>
						<td style="font-family:helvetica; font-size:8pt; padding:2px;" uniqueID="ms__id27">
							Started By:
							<xsl:choose>
								<xsl:when test="not(//Result/Item/created_by_id/Item)">
									<xsl:value-of select="//Result/Item/created_by_id/@keyed_name"/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="//Result/Item/created_by_id/Item/Relationships/Item/related_id/Item/name"/>
								</xsl:otherwise>
							</xsl:choose>
						</td>
						<td style="font-family:helvetica; font-size:8pt; padding:2px;" uniqueID="ms__id32">
							Started On:              <xsl:value-of select="//Result/Item/active_date"/>
						</td>
						<td style="font-family:helvetica; font-size:8pt; padding:2px;" uniqueID="ms__id31">
							Completed On:
							<xsl:value-of select="//Result/Item/closed_date"/>
						</td>
					</tr>
					<tr>
						<td style="font-family:helvetica; font-size:8pt; padding:2px;">
							Subflow: <xsl:value-of select="//Result/Item/Relationships/Item/related_id/Item/Relationships/Item[@type='Workflow Process']/name"/>
						</td>
						<td style="font-family:helvetica; font-size:8pt; padding:2px;">
							<xsl:value-of select="//Result/Item/Relationships/Item/related_id/Item/Relationships/Item[@type='Workflow Process']/description"/>
						</td>
					</tr>
					<tr valign="top">
						<td style="font-family:helvetica;font-size:8pt;padding:2px;" uniqueID="ms__id36" class="" align="left" colspan="3" rowspan="" height="" width="">
							<HR/>
						</td>
					</tr>
					<tr valign="top">
						<td style="font-family:helvetica;font-size:8pt;padding:2px;" uniqueID="ms__id38" class="" align="left" colspan="3" rowspan="" height="" width="">
							<table border="0" cellspacing="0" cellpadding="0" width="100%">
								<tr>
									<td style="font-family:helvetica; font-size:8pt; padding:2px;font-weight:bold; ">Activity</td>
									<td style="font-family:helvetica; font-size:8pt; padding:2px;font-weight:bold; ">State</td>
									<td style="font-family:helvetica; font-size:8pt; padding:2px;font-weight:bold; ">Assigned To</td>
									<td style="font-family:helvetica; font-size:8pt; padding:2px;font-weight:bold; ">Completed By</td>
									<td style="font-family:helvetica; font-size:8pt; padding:2px;font-weight:bold; ">How Voted</td>
									<td style="font-family:helvetica; font-size:8pt; padding:2px;font-weight:bold; ">When</td>
									<td width="50%" style="font-family:helvetica; font-size:8pt; padding:2px;font-weight:bold; ">Comments</td>
								</tr>
								<xsl:apply-templates select="//Item[@type='Activity Assignment' and (../../state[text() != 'Closed'] or string(closed_on/@neutral_value)!='')]" mode="Assignments">
									<xsl:sort data-type="text" order="ascending" select="../../state"/>
									<xsl:sort data-type="number" order="ascending" select="count(closed_on/@neutral_value)"/>
									<xsl:sort order="descending" select="substring(closed_on/@neutral_value,1,4)"/>
									<xsl:sort order="descending" select="substring(closed_on/@neutral_value,6,2)"/>
									<xsl:sort order="descending" select="substring(closed_on/@neutral_value,9,2)"/>
									<xsl:sort order="descending" select="substring(closed_on/@neutral_value,12,2)"/>
									<xsl:sort order="descending" select="substring(closed_on/@neutral_value,15,2)"/>
									<xsl:sort order="descending" select="substring(closed_on/@neutral_value,18,2)"/>
								</xsl:apply-templates>
							</table>
						</td>
					</tr>
				</table>
			</body>
			<script>
				function voteNow(wfpID, wfpName, actID, asmntID, itemID) {
				if(typeof aras === "undefined"){
				var aras = parent.parent.aras;
				}
				if(!aras) {
				alert("aras is not specified.");
				return;
				}
				var params = {};
				params.aras = aras;
				params.activity = aras.getItemById("Activity", actID, 1);
				params.wflName = wfpName;
				params.wflId = wfpID;
				params.assignmentId = asmntID;
				params.itemId = itemID;
				params.dialogWidth = 700;
				params.dialogHeight = 750;
				params.resizable = true;
				params.scroll = true;
				params.content = "InBasket/InBasket-VoteDialog.aspx";
				aras.getMostTopWindowWithAras(window).ArasModules.Dialog.show("iframe", params).promise.then(function (res) {
				if (parent &amp;&amp; parent.Core_loadProcessReport) {
				parent.setTimeout(parent.Core_loadProcessReport, 0);
				}
				});
				}
			</script>
		</html>
	</xsl:template>
	<xsl:template match="Item[@type='Activity Assignment']" mode="Assignments">
		<xsl:if test="not(../../subflow) or ../../subflow[@is_null='1']">
			<tr>
				<td style="font-family:helvetica; font-size:8pt; padding:2px;">
					<xsl:call-template name="Indent">
						<xsl:with-param name="Depth" select="count(ancestor::Item[@type='Workflow Process'])"/>
					</xsl:call-template>
					<xsl:choose>
						<xsl:when test="string-length(../../label) &gt; 0">
							<xsl:value-of select="../../label"/>
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of select="../../name"/>
						</xsl:otherwise>
					</xsl:choose>
					 
				</td>
				<td style="font-family:helvetica; font-size:8pt; padding:2px;">
					<xsl:value-of select="../../state"/>
					 
				</td>
				<td style="font-family:helvetica; font-size:8pt; padding:2px;">
					<xsl:choose>
						<xsl:when test="related_id[@is_null='0' and string(.)='']">
							<span style="color:#ff0000">Restricted</span>
							 
						</xsl:when>
						<xsl:otherwise>
							<xsl:variable name="members" select="related_id/Item[@type='Identity']/Relationships/Item/related_id/Item/name"/>
							<xsl:if test="$members">
								<span>
									<xsl:attribute name="title">
										<xsl:text>Members:</xsl:text>
										<xsl:for-each select="$members">
											<xsl:text>&#10;</xsl:text>
											<xsl:value-of select="."/>
										</xsl:for-each>
									</xsl:attribute>
									<xsl:value-of select="related_id/Item[@type='Identity']/name"/>
									<xsl:text> </xsl:text>
									<span class="circle">?</span>
								</span>
							</xsl:if>
							<xsl:if test="not($members)">
								<xsl:value-of select="related_id/Item[@type='Identity']/name"/>
							</xsl:if>
							 
						</xsl:otherwise>
					</xsl:choose>
				</td>
				<td style="font-family:helvetica; font-size:8pt; padding:2px;">
					<xsl:choose>
						<xsl:when test="closed_by[@is_null='0' and string(.)='']">
							<span style="color:#ff0000">Restricted</span>
							 
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of select="closed_by//Item[@type='Identity']/name"/>
							 
						</xsl:otherwise>
					</xsl:choose>
				</td>
				<td style="font-family:helvetica; font-size:8pt; padding:2px;">
					<xsl:variable name="itemID" select="string(@item_id_for_vote_now_link)"/>
					<xsl:if test="not($itemID='')">
						<xsl:variable name="wfpID" select="ancestor::Item[@type='Workflow Process'][1]/@id"/>
						<xsl:variable name="wfpName" select="ancestor::Item[@type='Workflow Process'][1]/name"/>
						<xsl:variable name="wfpCodedName">
							<xsl:call-template name="StringReplace">
								<xsl:with-param name="input" select="$wfpName"/>
								<xsl:with-param name="oldValue" select="'&quot;'"/>
								<xsl:with-param name="newValue" select="'&amp;quot;'"/>
							</xsl:call-template>
						</xsl:variable>
						<xsl:variable name="actID" select="ancestor::Item[@type='Activity'][1]/@id"/>
						<xsl:variable name="d" select="concat('&quot;,&quot;', '')"/>
						<span style="text-decoration:underline; cursor:pointer; color:#3668b1;">
							<xsl:attribute name="onclick">
								<xsl:value-of select="concat('voteNow(&quot;', $wfpID, $d, $wfpCodedName, $d, $actID, $d, @id, $d, $itemID, '&quot;)')"/>
							</xsl:attribute>
							VOTE NOW
						</span>
					</xsl:if>
					<xsl:if test="$itemID=''">
						<xsl:value-of select="path"/>
					</xsl:if>
					 
					 
				</td>
				<xsl:if test="closed_on and not(closed_on[@is_null = '1'])">
					<td style="font-family:helvetica; font-size:8pt; padding:2px;">
						<xsl:value-of select="closed_on"/>
						 
					</td>
				</xsl:if>
				<xsl:if test="not(closed_on) or closed_on[@is_null = '1']">
					<td style="font-family:helvetica; font-size:8pt; padding:2px;"> </td>
				</xsl:if>
				<td style="font-family:helvetica; font-size:8pt; padding:2px;">
					<xsl:value-of select="comments"/>
					 
				</td>
			</tr>
		</xsl:if>
	</xsl:template>
	<xsl:template name="Indent">
		<xsl:param name="Depth"/>
		<xsl:if test="$Depth &gt; '1'">
			<B>• </B>
			<xsl:call-template name="Indent">
				<xsl:with-param name="Depth" select="number($Depth) - 1"/>
			</xsl:call-template>
		</xsl:if>
	</xsl:template>
</xsl:stylesheet>]]></xsl_stylesheet>
  <name>FRG_Workflow Process History</name>
 </Item>
</AML>