<AML>
 <Item type="Method" id="8FBD3E3EF8754FDFBF0DA8DAF14BCF1A" action="add">
  <comments>Updated workflow task to be larger</comments>
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[const { item } = options;

const showModalDialog = async (url, paramsObj, windowOptions) => {
	paramsObj.content = url;
	paramsObj.isPopup = true;
	const dialog = ArasModules.Dialog.show(
		'iframe',
		Object.assign({}, paramsObj, windowOptions)
	);

	const result = await dialog.promise;
	const { updated } = result || {};
	if (updated) {
		const inBasketTaskItemTypeName = 'InBasket Task';
		const inBasketTaskItemTypeId = ArasModules.metadata.itemType.getItemTypeId(
			inBasketTaskItemTypeName
		);
		const itemsGridArray = mainLayout.tabsContainer.getSearchGridTabs(
			inBasketTaskItemTypeId
		);
		itemsGridArray.forEach((itemsGrid) => {
			itemsGrid.doSearch();
		});
	}
};

const getItemFromServer = async (amlQuery) => {
	const result = await aras.soapSendAsync(amlQuery);
	if (result.getFaultCode() !== 0) {
		aras.AlertError(result);
		return null;
	}
	return result.getResult().selectSingleNode('Item');
};

const params = {
	aras,
	activity: await getItemFromServer(
		`<Item type="Activity" action="get">
			<Relationships>
				<Item type="Activity Assignment" action="get">
					<id>${item.id}</id>
				</Item>
				<Item type="Activity Task" action="get" />
				<Item type="Activity Variable" action="get" />
				<Item type="Workflow Process Path" action="get" />
			</Relationships>
		</Item>`
	),
	wflName: item['container@aras.keyed_name'],
	wflId: item['container'],
	assignmentId: item.id,
	itemId: item['item']
};
const wndOptions = { dialogHeight: 750, dialogWidth: 700 };

return showModalDialog('InBasket/InBasket-VoteDialog.aspx', params, wndOptions);]]></method_code>
  <method_type>JavaScript</method_type>
  <name>FRG_cui_command_open_workflow_t</name>
 </Item>
</AML>