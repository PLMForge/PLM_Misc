<AML>
 <Item type="Method" id="2F23A09DAC914B7C861821375E343940" action="add">
  <comments>Method specifically to be called to hide a given tab and select a different tab</comments>
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[var thisItm = inDom;
var args = inArgs;

var hideShowSelectList = args[0];
var tabListIsArray = Array.isArray(hideShowSelectList);
var selectedTab = args[1];
var hideShowSelect = args[2];

var tabbar;
var desiredTabId;


//Function to hide tabs
hideTabs = function() {
    //Check if relationship grid is loaded
    if (!isTabbarReady()) {
        setTimeout(hideTabs, 50);
        return;
    }
  
    tabbar = parent.relationships.relTabbar;
    desiredTabId = tabbar.GetTabId(selectedTab);
    tabbar.selectTab(desiredTabId);
  
    //Check if desired tab is selected
    if (!isTabSelected(desiredTabId)) {
        setTimeout(hideTabs, 50);
        return;
    }
    //Show Tabs

    if (hideShowSelect === "show") {
        if (tabListIsArray) {
            hideShowSelectList.forEach((tab) => {
                var shownTab = tabbar.GetTabId(tab);
                tabbar.SetTabVisible(shownTab, true);
            });
        }
        else {
            var shownTab = tabbar.GetTabId(hideShowSelectList);
            tabbar.SetTabVisible(shownTab, true);
        }

    }
    else {
        //Hide tabs
        if (tabListIsArray) {
            hideShowSelectList.forEach((tab) => {
                var hideTab = tabbar.GetTabId(tab);
                tabbar.SetTabVisible(hideTab, false);
            });
        }
        else {
            var hideTab = tabbar.GetTabId(hideShowSelectList);
            tabbar.SetTabVisible(hideTab, false);
        }
    }
}

//Function to check if relationship grid is loaded
var isTabbarReady = function() {
  
    if (parent.relationships === undefined)
        return false;
    
    var isReady = Boolean(!parent.relationships ||
        !parent.relationships.relTabbarReady ||
        parent.relationships.relTabbar.GetTabOrder("|") !== "");
    return isReady;
};

//Function to check if desired tab is selected
var isTabSelected = function(palceholderTabId) {
    return (tabbar.GetSelectedTab() === palceholderTabId);
};

setTimeout(hideTabs, 50);
return;]]></method_code>
  <method_type>JavaScript</method_type>
  <name>FRG_HideShowTabMethod</name>
 </Item>
</AML>